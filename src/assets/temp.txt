OtpScreen code 

import React, { useRef, useState, useEffect } from 'react';
import {
  View,
  Text,
  TextInput,
  StyleSheet,
  TouchableOpacity,
  Animated,
  Image,
  Alert,
  KeyboardAvoidingView,
  Platform,
} from 'react-native';
import LinearGradient from 'react-native-linear-gradient';

export default function OtpScreen({ route, navigation }) {
  const { phone } = route.params;
  const [otp, setOtp] = useState(['', '', '', '']);
  const [timer, setTimer] = useState(59);

  const inputs = useRef([]);

  // Countdown timer logic
  useEffect(() => {
    let interval = setInterval(() => {
      setTimer((prev) => {
        if (prev === 0) {
          clearInterval(interval);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
    return () => clearInterval(interval);
  }, []);

  const handleChange = (text, index) => {
    if (/^\d$/.test(text)) {
      let newOtp = [...otp];
      newOtp[index] = text;
      setOtp(newOtp);
      if (index < 3) inputs.current[index + 1].focus();
    } else if (text === '') {
      let newOtp = [...otp];
      newOtp[index] = '';
      setOtp(newOtp);
    }
  };

  const handleSubmit = () => {
    const code = otp.join('');
    if (code.length !== 4) {
      Alert.alert('Invalid OTP', 'Please enter a 4-digit OTP.');
      return;
    }

    // Proceed to next screen or verify with backend
    Alert.alert('Success', `OTP Verified: ${code}`);
    // navigation.navigate('NextScreen');
  };

  return (
    <LinearGradient colors={['#F0F0F0', '#FFFFFF']} style={styles.container}>
      <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : undefined} style={{ flex: 1 }}>
        <View style={styles.card}>
          <Image
            source={require('../../assets/Image/Otp-Image.png')}
            style={styles.image}
            resizeMode="contain"
          />

          <Text style={styles.title}>Verify Phone Number</Text>
          <Text style={styles.subtext}>
            A Four digit code has been sent to the{'\n'}<Text style={styles.phone}>+91 {phone}</Text>
          </Text>

          <Text style={styles.instruction}>Kindly enter the code to continue.</Text>

          <View style={styles.otpRow}>
            {otp.map((digit, index) => (
              <TextInput
                key={index}
                ref={(ref) => (inputs.current[index] = ref)}
                style={styles.otpInput}
                keyboardType="number-pad"
                maxLength={1}
                value={digit}
                onChangeText={(text) => handleChange(text, index)}
              />
            ))}
          </View>

          <View style={styles.resendRow}>
            <Text style={styles.resendText}>Resend OTP</Text>
            <Text style={styles.timer}>00:{timer < 10 ? `0${timer}` : timer}</Text>
          </View>

          <TouchableOpacity onPress={handleSubmit} activeOpacity={0.9} style={styles.buttonWrapper}>
            <LinearGradient
              colors={['#6E00FF', '#B300E7']}
              start={{ x: 0, y: 0 }}
              end={{ x: 1, y: 1 }}
              style={styles.button}
            >
              <Text style={styles.buttonText}>Next</Text>
            </LinearGradient>
          </TouchableOpacity>

          <Text style={styles.safeNote}>Your data Safe and Secure with us</Text>
        </View>
      </KeyboardAvoidingView>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  card: {
    margin: 20,
    backgroundColor: '#fff',
    borderRadius: 26,
    padding: 24,
    paddingTop: 40,
    alignItems: 'center',
    elevation: 8,
    shadowColor: '#9333EA',
    shadowOpacity: 0.1,
    shadowOffset: { width: 0, height: 6 },
    shadowRadius: 10,
  },
  image: {
    width: 160,
    height: 120,
    marginBottom: 20,
  },
  title: {
    fontSize: 18,
    fontFamily: 'Okra-Bold',
    color: '#000',
    marginBottom: 8,
  },
  subtext: {
    fontSize: 13,
    fontFamily: 'Okra-Regular',
    color: '#5B5B5B',
    textAlign: 'center',
  },
  phone: {
    fontFamily: 'Okra-Bold',
    color: '#6E00FF',
  },
  instruction: {
    marginTop: 20,
    fontSize: 13,
    fontFamily: 'Okra-Regular',
    color: '#444',
  },
  otpRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 18,
    width: '80%',
  },
  otpInput: {
    width: 50,
    height: 50,
    borderWidth: 1.2,
    borderColor: '#ccc',
    borderRadius: 12,
    textAlign: 'center',
    fontSize: 20,
    color: '#333',
    fontFamily: 'Okra-Bold',
  },
  resendRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: '80%',
    marginTop: 20,
  },
  resendText: {
    fontSize: 13,
    fontFamily: 'Okra-Medium',
    color: '#000',
  },
  timer: {
    fontSize: 13,
    fontFamily: 'Okra-Bold',
    color: '#FF3D00',
  },
  buttonWrapper: {
    marginTop: 30,
    width: '100%',
  },
  button: {
    paddingVertical: 15,
    borderRadius: 40,
    alignItems: 'center',
    justifyContent: 'center',
  },
  buttonText: {
    fontFamily: 'Okra-Bold',
    color: '#fff',
    fontSize: 16,
  },
  safeNote: {
    marginTop: 16,
    fontSize: 11,
    fontFamily: 'Okra-Regular',
    color: '#8C8C8C',
  },
});
